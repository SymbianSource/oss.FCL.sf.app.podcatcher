/*
 * Copyright (c) 2007-2010 Sebastian Brannstrom, Lars Persson, EmbedDev AB
 *
 * All rights reserved.
 * This component and the accompanying materials are made available
 * under the terms of the License "Eclipse Public License v1.0"
 * which accompanies this distribution, and is available
 * at the URL "http://www.eclipse.org/legal/epl-v10.html".
 *
 * Initial Contributors:
 * EmbedDev AB - initial contribution.
 *
 * Contributors:
 *
 * Description:
 *
 */

RESOURCE HOTKEYS r_podcast_feedview_hotkeys
    {
    control =
        {
        HOTKEY { command = EAknCmdExit; key='e'; }
        };
    }

RESOURCE MENU_BAR r_podcast_feedview_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_podcast_feedview_menu; txt = "Feeds"; }
        };
    }

RESOURCE MENU_PANE r_podcast_feedview_menu
    {
    items =
        {
		MENU_ITEM
			{
			command = EPodcastImportExportFeeds;
			txt = STRING_r_view_import_export_feeds_cmd;
			cascade = r_importexport_menu;
			},
		MENU_ITEM
			{
			command = EPodcastAbout;
			txt = STRING_r_view_about_cmd;
			}, 
		MENU_ITEM
			{
			command = EPodcastHelp;
			txt = STRING_r_view_help;
			},
		MENU_ITEM
			{
			command = EAknSoftkeyExit;
			txt = STRING_r_exit_cmd;
			},
		MENU_ITEM
			{
			txt = STRING_r_view_edit_feed_cmd_short;
			command = EPodcastEditFeed; 
			flags = EEikMenuItemSpecific;
			},
		MENU_ITEM
			{
			txt = STRING_r_view_delete_feed_cmd_short;
			command = EPodcastDeleteFeed;
			flags = EEikMenuItemSpecific;
			},
		MENU_ITEM
			{
			txt = STRING_r_update_feed_short_cmd;
			command = EPodcastUpdateFeed;
			flags = EEikMenuItemSpecific;
			}
        };
    }

RESOURCE MENU_PANE r_importexport_menu
	{
	items =	{
		MENU_ITEM
			{
			command = EPodcastImportFeeds;
			txt = STRING_r_view_import_feeds_cmd;
			},
		MENU_ITEM
			{
			command = EPodcastExportFeeds;
			txt = STRING_r_view_export_feeds_cmd;
			}
	};	
	}

RESOURCE CBA r_podcast_cba
	{
	buttons =
		{
		CBA_BUTTON
			{id=EAknSoftkeyOptions; txt = STRING_r_cba_options;},
		CBA_BUTTON
			{id=EPodcastHide; txt = STRING_r_cba_hide;}
		};
	}

RESOURCE AVKON_VIEW r_podcast_feedview
{
	hotkeys = r_podcast_feedview_hotkeys;
	menubar = r_podcast_feedview_menubar;
	cba = r_podcast_cba;
	toolbar = r_feedview_toolbar;
}

RESOURCE AVKON_TOOLBAR r_feedview_toolbar
    {
    flags = KAknToolbarFixed;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = EPodcastUpdateAllFeeds;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        //bmpfile = AVKON_BITMAP_FILE;
                        //bmpid = EMbmAvkonQgn_indi_find_goto;
                        txt = STRING_r_update_feed_short_cmd;
                        helptxt = STRING_r_update_all_feeds_cmd;
                        }  
                    };
                };
            },
		TBAR_CTRL
			{
			type = EAknCtButton;
			id = EPodcastCancelUpdateAllFeeds;
			control = AVKON_BUTTON
				{
				states =
					{
					AVKON_BUTTON_STATE
						{
						//bmpfile = AVKON_BITMAP_FILE;
						//bmpid = EMbmAvkonQgn_indi_find_goto;
						txt = STRING_r_cancel_update_all_feeds_short_cmd;
						helptxt = STRING_r_cancel_update_all_feeds_cmd;
					   }  
					};
				};
		},
		TBAR_CTRL
			{
			type = EAknCtButton;
			id = EPodcastAddFeed;
			control = AVKON_BUTTON
				{
				flags = KAknButtonTextInsideFrame;
				states =
					{
					AVKON_BUTTON_STATE
						{
						//bmpfile = AVKON_BITMAP_FILE;
						//bmpid = EMbmAvkonQgn_indi_find_goto;
						//press_bmpid = EMbmAvkonQgn_indi_find_goto;
						txt = STRING_r_view_add_feed_cmd_short;
						helptxt = STRING_r_view_add_feed_cmd;
						} 
					};
				};
			},
			TBAR_CTRL
				{
				type = EAknCtButton;
				id = EPodcastSettings;
				control = AVKON_BUTTON
					{
					states =
						{
						AVKON_BUTTON_STATE
							{
							//bmpfile = AVKON_BITMAP_FILE;
							//bmpid = EMbmAvkonQgn_indi_find_goto;
							//press_bmpid = EMbmAvkonQgn_indi_find_goto;
							txt = STRING_r_settings_cmd;
							helptxt = STRING_r_settings_cmd;
						   }  
						};
					};
			}
			};// items
    }

RESOURCE DIALOG r_podcast_add_feed_dlg
{
	buttons = R_AVKON_SOFTKEYS_OK_CANCEL;

	flags = EGeneralQueryFlags;
	title = STRING_r_add_feed_title;
	items = 
	{
			DLG_LINE
				{
				type = EAknCtQuery;
				id = EGeneralQuery;
				control= AVKON_DATA_QUERY
					{
					layout = EDataLayout;
					control = EDWIN
						{
						flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable; // | EEikEdwinNoAutoSelection;
						maxlength = 256;
						width = 4;
						lines = 5;
						};
					};	
				}
	};
}

RESOURCE DIALOG r_podcast_edit_feed_dlg
{
	buttons = R_AVKON_SOFTKEYS_OK_CANCEL;

	flags = EGeneralQueryFlags;
	items = 
	{
			DLG_LINE
				{
				type = EAknCtMultilineQuery;
				id = EMultilineFirstLine;
				control= AVKON_DATA_QUERY
					{
					layout = EMultiDataFirstEdwin;
					label = STRING_r_add_feed_title_prompt;
					control = EDWIN
						{
						flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
						maxlength = 256;
						width = 4;
						lines = 5;
						};
					};	
				},
			DLG_LINE
				{
				type = EAknCtMultilineQuery;
				id = EMultilineSecondLine;
				control= AVKON_DATA_QUERY
					{
					layout = EMultiDataSecondEdwin;
					label = STRING_r_edit_feed_prompt;
					control = EDWIN
						{
						flags= EEikEdwinNoHorizScrolling | EEikEdwinResizable;
						maxlength = 1024;
						width = 4;
						lines = 5;
						};
					};	
				}
	};
}

RESOURCE ARRAY r_feedview_add_url_or_search_array
{
    items =
    {
        LBUF { txt = STRING_r_add_url;     },
        LBUF { txt = STRING_r_add_search; }
    };
}

RESOURCE AVKON_LIST_QUERY r_feedview_add_url_or_search
{
    softkeys=R_AVKON_SOFTKEYS_SELECT_CANCEL;
    items =
    {
        AVKON_LIST_QUERY_DLG_LINE
        {
            control = AVKON_LIST_QUERY_CONTROL
            {
                listtype = EAknCtSinglePopupMenuListBox;
                heading = STRING_r_add_url_or_search;
                listbox = AVKON_LIST_QUERY_LIST
                {
                    // array of items will be defined dynamically
                };
            };
        }
    };
}

