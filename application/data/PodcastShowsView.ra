/*
* Copyright (c) 2007-2010 Sebastian Brannstrom, Lars Persson, EmbedDev AB
*
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* EmbedDev AB - initial contribution.
*
* Contributors:
*
* Description:
*
*/

RESOURCE AVKON_VIEW r_podcast_showsview
{
	menubar = r_podcast_showsview_menubar;
	cba = R_AVKON_SOFTKEYS_OPTIONS_BACK;
	toolbar = r_showsview_toolbar;
}

RESOURCE MENU_BAR r_podcast_showsview_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_podcast_showsview_menu; txt = "Shows"; }
        };
    }

RESOURCE MENU_PANE r_podcast_showsview_menu
    {
    items =
        {
        MENU_ITEM
			{
			command = EPodcastMarkAllPlayed;
			txt = STRING_r_view_mark_all_played_cmd;
			},
//		MENU_ITEM
//			{
//			command = EPodcastFilterShows;
//			txt = STRING_r_view_filter_shows_cmd;
//			cascade = r_filtershows_menu;
//			},
		MENU_ITEM
			{
			command = EPodcastAbout;
			txt = STRING_r_view_about_cmd;
			}, 
		MENU_ITEM
			{
			command = EPodcastHelp;
			txt = STRING_r_view_help;
			},
		MENU_ITEM
			{
			command = EAknSoftkeyExit;
			txt = STRING_r_exit_cmd;
			}
        };
    }

RESOURCE MENU_PANE r_filtershows_menu
	{
	items =	{
		MENU_ITEM
			{
			command = EPodcastFilterShowsAll;
			txt = STRING_r_view_filter_all_shows_cmd;
			},
/*		MENU_ITEM
			{
			command = EPodcastFilterShowsNew;
			txt = STRING_r_view_filter_new_shows_cmd;
			},
		MENU_ITEM
			{
			command = EPodcastFilterShowsDownloaded;
			txt = STRING_r_view_filter_downloaded_shows_cmd;
			},*/
		MENU_ITEM
			{
			command = EPodcastFilterShowsNewAndDownloaded;
			txt = STRING_r_view_filter_downloaded_new_shows_cmd;
			}
	};	
	}

RESOURCE AVKON_TOOLBAR r_showsview_toolbar
    {
    flags = KAknToolbarFixed;
    items =
        {
        TBAR_CTRL
            {
            type = EAknCtButton;
            id = EPodcastUpdateFeed;
            control = AVKON_BUTTON
                {
                states =
                    {
                    AVKON_BUTTON_STATE
                        {
                        bmpfile = APPICON;
                        bmpid = EMbmPodcastReload;
                        bmpmask = EMbmPodcastReload_mask;
                        //txt = STRING_r_update_feed_short_cmd;
                        helptxt = STRING_r_update_feed_cmd;
                        }  
                    };
                };
            },
            TBAR_CTRL
                {
                type = EAknCtButton;
                id = EPodcastCancelUpdateAllFeeds;
                control = AVKON_BUTTON
                    {
                    states =
                        {
                        AVKON_BUTTON_STATE
                            {
                            bmpfile = APPICON;
                            bmpid = EMbmPodcastCancel;
                            bmpmask = EMbmPodcastCancel_mask;
                            //txt = STRING_r_cancel_update_all_feeds_short_cmd;
                            helptxt = STRING_r_cancel_update_all_feeds_cmd;
                           }  
                        };
                    };
                },
// we keep the download toolbar button in S^3, but always disable it
// because there are drawing issues with only one item in the toolbar
            TBAR_CTRL
			{
			type = EAknCtButton;
			id = EPodcastDownloadShow;
			control = AVKON_BUTTON
				{
				states =
					{
					AVKON_BUTTON_STATE
						{
						bmpfile = APPICON;
						bmpid = EMbmPodcastDownload;
						bmpmask = EMbmPodcastDownload_mask;
						//txt = STRING_r_view_download_show_cmd;
						helptxt = STRING_r_view_download_show_cmd;
						}  
					};
				};
			}
        ,		
		TBAR_CTRL
			{
			type = EAknCtButton;
			id =EPodcastDeleteShow;
			control = AVKON_BUTTON
				{
				states =
					{
					AVKON_BUTTON_STATE
						{
						bmpfile = APPICON;
						bmpid = EMbmPodcastDelete;
						bmpmask = EMbmPodcastDelete_mask;
						//txt = STRING_r_view_delete_show_cmd;
						helptxt = STRING_r_view_delete_show_cmd;
						}  
					};
				};
			},
		TBAR_CTRL
			{
			type = EAknCtButton;
			id = EPodcastMarkAsPlayed;
			control = AVKON_BUTTON
				{
				states =
					{
					AVKON_BUTTON_STATE
						{
						bmpfile = APPICON;
						bmpid = EMbmPodcastMarkold;
						bmpmask = EMbmPodcastMarkold_mask;
						//txt = STRING_r_view_mark_as_played_cmd_short;
						helptxt = STRING_r_view_mark_as_played_cmd_short;
						}  
					};
				};
			},
			TBAR_CTRL
				{
				type = EAknCtButton;
				id =EPodcastMarkAsUnplayed;
				control = AVKON_BUTTON
					{
					states =
						{
						AVKON_BUTTON_STATE
							{
							bmpfile = APPICON;
							bmpid = EMbmPodcastMarknew;
							bmpmask = EMbmPodcastMarknew_mask;
							//txt = STRING_r_view_mark_as_unplayed_cmd_short;
							helptxt = STRING_r_view_mark_as_unplayed_cmd_short;
							}  
						};
					};
				}
        };
    }

RESOURCE STYLUS_POPUP_MENU r_showview_popup_menu
	{
		items =
		{
			STYLUS_POPUP_MENU_ITEM
				{
					txt = STRING_r_view_show_info_cmd;
					command = EPodcastShowInfo;
				}
		};
	}

RESOURCE DIALOG r_show_info_note
{
   flags = EAknDialogGenericQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
   buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
   items=
   {
  
      DLG_LINE 
      {
      	 type = EAknCtPopupHeadingPane;
      	 id = EAknMessageQueryHeaderId;
         itemflags = EEikDlgItemNonFocusing;
         control = AVKON_HEADING
         {
		headinglayout=R_AVKON_LIST_HEADING_PANE_POPUPS;		
         };
      },  
      DLG_LINE
      {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
         {
          
         };
      }
   };
}

