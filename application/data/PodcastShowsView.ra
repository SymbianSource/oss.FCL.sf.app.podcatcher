/*
* Copyright (c) 2007-2010 Sebastian Brannstrom, Lars Persson, EmbedDev AB
*
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of the License "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* EmbedDev AB - initial contribution.
*
* Contributors:
*
* Description:
*
*/

RESOURCE AVKON_VIEW r_podcast_showsview
{
	menubar = r_podcast_showsview_menubar;
	cba = R_AVKON_SOFTKEYS_OPTIONS_BACK;
}

RESOURCE MENU_BAR r_podcast_showsview_menubar
    {
    titles =
        {
        MENU_TITLE { menu_pane = r_podcast_showsview_menu; txt = "Shows"; }
        };
    }

RESOURCE MENU_PANE r_podcast_showsview_menu
    {
    items =
        {
		MENU_ITEM
			{
			command = EPodcastUpdateFeed;
			txt = STRING_r_update_feed_cmd;
			},
		MENU_ITEM
			{
			command = EPodcastCancelUpdateAllFeeds;
			txt = STRING_r_cancel_update_all_feeds_cmd;
			},
		MENU_ITEM
			{
			command = EPodcastShowsShowMenu;
			txt = STRING_r_view_shows_show_menu;
			cascade = r_shows_show_menu;
			},
		MENU_ITEM
			{
			command = EPodcastMarkAllPlayed;
			txt = STRING_r_view_mark_all_played_cmd;
			},
		MENU_ITEM
			{
			command = EPodcastHelp;
			txt = STRING_r_view_help;
			}
        };
    }

RESOURCE MENU_PANE r_shows_show_menu
	{
	items =	{
	MENU_ITEM
		{
		command = EPodcastMarkAsPlayed;
		txt = STRING_r_view_mark_as_played_cmd_short;
		},
	MENU_ITEM
		{
		command = EPodcastMarkAsUnplayed;
		txt = STRING_r_view_mark_as_unplayed_cmd_short;
		},
	MENU_ITEM
		{
		command = EPodcastDeleteShow;
		txt = STRING_r_view_delete_show_cmd;
		},
	MENU_ITEM
		{
			txt = STRING_r_view_show_info_cmd;
			command = EPodcastShowInfo;
		}
	};
	}


RESOURCE DIALOG r_show_info_note
{
   flags = EAknDialogGenericQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
   buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
   items=
   {
  
      DLG_LINE 
      {
      	 type = EAknCtPopupHeadingPane;
      	 id = EAknMessageQueryHeaderId;
         itemflags = EEikDlgItemNonFocusing;
         control = AVKON_HEADING
         {
		headinglayout=R_AVKON_LIST_HEADING_PANE_POPUPS;		
         };
      },  
      DLG_LINE
      {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
         {
          
         };
      }
   };
}

